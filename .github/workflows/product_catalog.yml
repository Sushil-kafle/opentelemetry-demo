name: product-catalog-ci
on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "**/*"

env:
  GO_VERSION: 1.22
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/product-catalog
  DEPLOY_MANIFEST: kubernetes/productcatalog/deploy.yaml
  ARGOCD_APP: product-catalog

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download Go modules and Build
        run: |
          cd src/product-catalog
          go mod download
          go build -o product-catalog-service main.go

      - name: Run unit tests
        run: |
          cd src/product-catalog
          go test ./...

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.55.2
          working-directory: src/product-catalog

  docker:
    runs-on: ubuntu-latest
    needs: [build, code-quality]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: src/product-catalog
          file: src/product-catalog/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.run_id }}

  updatek8s:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update image tag in Kubernetes manifest
        run: |
          sed -i "s|image: .*|image: ${{ env.DOCKER_IMAGE }}:${{ github.run_id }}|" ${{ env.DEPLOY_MANIFEST }}

      - name: Auto commit updated manifest
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "[CI] Update image tag to ${{ github.run_id }}"
          file_pattern: ${{ env.DEPLOY_MANIFEST }}

  argocd-sync:
    runs-on: ubuntu-latest
    needs: updatek8s

    steps:
      - name: Install Argo CD CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/

      - name: ArgoCD Login
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --insecure

      - name: Sync Argo CD app
        run: |
          argocd app sync ${{ env.ARGOCD_APP }}
